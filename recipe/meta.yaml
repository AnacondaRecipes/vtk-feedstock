{% set version = "9.4.1" %}
{% set build = 2 %}
{% set qt_version = "6" %}

{% set minor_version = ".".join(version.split(".")[:2]) %}

package:
  name: vtk-suite
  version: {{ version }}

source:
  url: https://www.vtk.org/files/release/{{ minor_version }}/VTK-{{ version }}.tar.gz
  sha256: c253b0c8d002aaf98871c6d0cb76afc4936c301b72358a08d5f3f72ef8bc4529
  patches:
    - patches/fix-threads-windows.patch  # [win]
    # https://github.com/conda-forge/vtk-feedstock/pull/282
    # https://gitlab.kitware.com/vtk/vtk/-/issues/18365#note_1079278
    # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/9987
    - patches/9987_try_except_python_import.patch  # [not win]
    # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/11929
    - patches/11929_disable_class_overrides_pyi.patch

build:
  number: {{ build }}
  # qtbase isn't available for osx-64
  skip: True  # [osx and x86_64]

requirements:
  build:
    - {{ compiler("cxx") }}
    - cmake
    - ninja
    - patch     # [not win]
    - m2-patch  # [win]
    - pugixml
  host:
    - python
    - libglx-devel {{ libglx }}  # [linux]
    # VTK Third Party dependencies
    - boost-cpp {{ boost_cpp }}
    - double-conversion 3.1.5
    - eigen {{ eigen }}
    - expat {{ expat }}
    - ffmpeg {{ ffmpeg }}
    - fmt {{ fmt }}
    - freetype {{ freetype }}
    # glad2 is a python package so no pinnings
    - glad2
    - glad2-cmake 2.0.8
    # Until this is solved:
    # https://gitlab.kitware.com/vtk/vtk/-/issues/19561
    # we use the internal one in build-base.sh
    - gl2ps {{ gl2ps }}  # [not osx]
    - hdf5 {{ hdf5 }}
    - jpeg {{ jpeg }}
    - jsoncpp {{ jsoncpp }}
    - libnetcdf {{ libnetcdf }}
    - libogg {{ libogg }}
    - libpng {{ libpng }}
    - libtheora {{ libtheora }}
    - libtiff {{ libtiff }}
    - libxml2 {{ libxml2 }}
    - lz4-c {{ lz4_c }}
    - nlohmann_json 3.11.2
    - proj {{ proj }}
    - qtbase-devel {{ qt_version }}
    - sqlite {{ sqlite }}
    # Limit TBB version. The oneAPI (2021.*) release removed the `tbb_stddef.h`
    # header, which causes configure-time errors. The 2020 release is probably
    # safe to use but generates *tons* of deprecation warnings that (may) hint
    # at subtle breaks.
    # v2022.0.0 breaks things.
    - tbb-devel 2021.8.0
    - utfcpp 3.2.1
    - xz {{ xz }}
    - zlib {{ zlib }}

outputs:
  - name: vtk-base
    build:
      skip: True  # [osx and x86_64]
      script:
        - ${RECIPE_DIR}/build-base.sh  # [not win]
        - "%RECIPE_DIR%\\bld-base.bat"  # [win]
      ignore_run_exports:
        - ffmpeg     # [not win]
        - libglu     # [linux and aarch64]
        - libopengl  # [linux and aarch64]
      run_exports:
        - {{ pin_subpackage('vtk-base', max_pin='x.x.x') }}

    requirements:
      build:
        - {{ compiler("cxx") }}
        - cmake
        - ninja
        - patch     # [not win]
        - m2-patch  # [win]
        - pugixml
      host:
        - python
        - libglx-devel {{ libglx }}  # [linux]
        # VTK Third Party dependencies
        - boost-cpp {{ boost_cpp }}
        - double-conversion 3.1.5
        - eigen {{ eigen }}
        - expat {{ expat }}
        - ffmpeg {{ ffmpeg }}
        - fmt {{ fmt }}
        - freetype {{ freetype }}
        # glad2 is a python package so no pinnings
        - glad2
        - glad2-cmake 2.0.8
        # Until this is solved:
        # https://gitlab.kitware.com/vtk/vtk/-/issues/19561
        # we use the internal one in build-base.sh
        - gl2ps {{ gl2ps }}  # [not osx]
        - hdf5 {{ hdf5 }}
        - jpeg {{ jpeg }}
        - jsoncpp {{ jsoncpp }}
        - libnetcdf {{ libnetcdf }}
        - libogg {{ libogg }}
        - libpng {{ libpng }}
        - libtheora {{ libtheora }}
        - libtiff {{ libtiff }}
        - libxml2 {{ libxml2 }}
        - lz4-c {{ lz4_c }}
        - nlohmann_json 3.11.2
        - proj {{ proj }}
        - qtbase-devel {{ qt_version }}
        - sqlite {{ sqlite }}
        # Limit TBB version. The oneAPI (2021.*) release removed the `tbb_stddef.h`
        # header, which causes configure-time errors. The 2020 release is probably
        # safe to use but generates *tons* of deprecation warnings that (may) hint
        # at subtle breaks.
        # v2022.0.0 breaks things.
        - tbb-devel 2021.8.0
        - utfcpp 3.2.1
        - xz {{ xz }}
        - zlib {{ zlib }}
      run:
        - python
        - {{ pin_compatible('double-conversion') }}  # [not win]
        - nlohmann_json
        # v9.4.1 requires numpy >=1.9 https://gitlab.kitware.com/vtk/vtk/-/blob/v9.4.1/CMake/setup.py.in#L69
        # It's only needed via the python component. It should just go in run, not host.
        - numpy
        - utfcpp
        # Extra dependencies for Web modules:
        # - aiohttp
        # - wslink
        - matplotlib-base >=2.0.0
      run_constrained:
        # Paraview bundles its own VTK that has conflicting Python vtkmodules
        - paraview ==9999999999

    test:
      requires:
        - pip
        - setuptools
      files:
        - test_vtk.py
      # imports are in test_vtk.py
      # commands are in run_test.{sh,bat}
      script: run_test.sh   # [not win]
      script: run_test.bat  # [win]

  - name: vtk-io-ffmpeg
    build:
      script:
        - ${RECIPE_DIR}/build-io-ffmpeg.sh  # [not win]
        - exit 1  # [win]
      skip: true  # [win or (osx and x86_64)]
      run_exports:
        - {{ pin_subpackage('vtk-io-ffmpeg', max_pin='x.x.x') }}
      missing_dso_whitelist:
        - '*/libvtkIOMovie-*.dylib'               # [osx]
        - '*/libvtkIOVideo-*.dylib'               # [osx]
        - '*/libvtkCommonExecutionModel-*.dylib'  # [osx]
        - '*/libvtkCommonSystem-*.dylib'          # [osx]
        - '*/libvtkCommonCore-*.dylib'            # [osx]
        - '*/libvtksys-*.dylib'                   # [osx]
        - '*/libvtkWrappingPythonCore*-*.dylib'   # [osx]
        - '*/libvtkIOMovie-*.so*'                 # [linux]
        - '*/libvtkIOVideo-*.so*'                 # [linux]
        - '*/libvtkCommonExecutionModel-*.so*'    # [linux]
        - '*/libvtkCommonSystem-*.so*'            # [linux]
        - '*/libvtkCommonCore-*.so*'              # [linux]
        - '*/libvtksys-*.so*'                     # [linux]
        - '*/libvtkWrappingPythonCore*-*.so*'     # [linux]
        - '/lib64/libc.so.6'                      # [linux]
        - '/lib64/ld-linux-aarch64.so.1'          # [linux and aarch64]
    requirements:
      build: []
      host:
        # We use ffmpeg here in the host section so that conda build
        # uses the global pinnings and ensures ffmpeg compatibility.
        - ffmpeg
      run:
        - {{ pin_subpackage("vtk-base", exact=True) }}
        - ffmpeg
        - libcxx  # [osx]
        - libstdcxx-ng  # [linux]
        - libgcc-ng  # [linux]
    test:
      requires:
        - pip
        - setuptools
      imports:
        - vtk.vtkIOFFMPEG

  - name: vtk
    build:
      skip: True  # [osx and x86_64]
      ignore_run_exports_from:
        - ffmpeg
      run_exports:
        - {{ pin_subpackage('vtk-base', max_pin='x.x.x') }}
    requirements:
      build: []
      host:
        # We include ffmpeg in the host dependency so the PKG_HASH is different between
        # ffmpeg==6 and ffmpeg==7 builds, avoiding the issue described in
        # https://github.com/conda-forge/vtk-feedstock/issues/347
        - ffmpeg
      run:
        - {{ pin_subpackage("vtk-base", max_pin="x.x.x") }}
        - {{ pin_subpackage("vtk-io-ffmpeg", max_pin='x.x.x') }}  # [not win]
    test:
      requires:
        - pip
        - setuptools
      imports:
        - vtk
        - vtk.vtkIOFFMPEG  # [not win]
      commands:      # [not win]
        - pip check  # [not win]

about:
  home: https://vtk.org/
  license: BSD-3-Clause
  license_family: BSD
  license_file:
    - Copyright.txt
    - vendored-fast_float-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/fast_float/vtkfast_float/LICENSE-MIT
    - vendored-libharu-license.txt     # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/libharu/vtklibharu/LICENSE
    - vendored-loguru-license.txt      # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/loguru/vtkloguru/LICENSE
    - vendored-pegtl-license.txt       # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/pegtl/vtkpegtl/LICENSE
    - vendored-exprtk-license.txt      # https://github.com/conda-forge/exprtk-feedstock/blob/main/license.txt
    - vendored-fmt-license.txt         # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/fmt/vtkfmt/LICENSE.rst
    - vendored-cgns-license.txt        # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/cgns/vtkcgns/license.txt
    - vendored-ioss-license.txt        # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/ioss/vtkioss/COPYRIGHT
    - vendored-token-license.txt       # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/token/vtktoken/license.md
    - vendored-verdict-license.txt     # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/verdict/vtkverdict/LICENSE
  summary: >
    VTK is an open-source software system designed for 3D computer graphics, image processing,
    and visualization. It provides libraries and tools for developing scientific and
    engineering applications that require 3D visualization.
  description: |
    VTK, or Visualization Toolkit, is an open-source software system designed for 3D computer graphics,
    image processing, and visualization. It provides a wide range of libraries and tools that are useful
    for developing scientific and engineering applications that require 3D visualization, such as medical
    imaging, computational fluid dynamics, and data visualization. The package supports a wide range of
    visualization algorithms and techniques, including volume rendering, isosurface extraction, contouring,
    and glyphs. VTK is implemented in C++ with Python bindings, and includes pre-built classes and functions
    for manipulating and visualizing data. The package has been used in various applications, including
    medical imaging, computational fluid dynamics, molecular modeling, and geospatial data visualization.
  dev_url: https://gitlab.kitware.com/vtk/vtk
  doc_url: https://vtk.org/documentation/

extra:
  recipe-maintainers:
    - Korijn
    - ivoflipse
    - Maxyme
    - ccordoba12
    - grlee77
    - msarahan
    - patricksnape
    - dfroger
    - tadeu
    - marcelotrevisani
