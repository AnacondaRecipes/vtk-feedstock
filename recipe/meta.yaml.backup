{% set version = "9.4.1" %}
{% set build = 0 %}

{% set minor_version = ".".join(version.split(".")[:2]) %}

package:
  name: vtk
  version: {{ version }}

source:
  url: https://www.vtk.org/files/release/{{ minor_version }}/VTK-{{ version }}.tar.gz
  sha256: c253b0c8d002aaf98871c6d0cb76afc4936c301b72358a08d5f3f72ef8bc4529
  patches:
    - patches/fix-threads-windows.patch  # [win]
    # https://github.com/conda-forge/vtk-feedstock/pull/282
    # https://gitlab.kitware.com/vtk/vtk/-/issues/18365#note_1079278
    # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/9987
    - patches/9987_try_except_python_import.patch  # [not win]
    # https://gitlab.kitware.com/vtk/vtk/-/merge_requests/11929
    - patches/11929_disable_class_overrides_pyi.patch

build:
  number: {{ build }}
  string: "py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ build }}"
  # TODO: py>39 is green. Remove py>39 before the final build
  # osx and win are green. Skip not linux
  skip: True  # [s390x or py>39 or not linux]
  #skip: True  # [not aarch64 or py>39]
  ignore_run_exports_from:
    - ffmpeg  # [not win]
  run_exports:
    - {{ pin_subpackage('vtk', max_pin='x.x.x') }}

requirements:
  build:
    - {{ compiler("cxx") }}
    - cmake
    - ninja
    - patch     # [not win]
    - m2-patch  # [win]
    - pugixml
    - {{ cdt('libice-devel') }}          # [linux]
    - {{ cdt('libselinux') }}            # [linux]
    - {{ cdt('libsm-devel') }}           # [linux]
    - {{ cdt('libuuid') }}               # [linux]
    #- {{ cdt('libx11') }}                # [linux]
    - {{ cdt('libx11-devel') }}          # [linux]
    #- {{ cdt('libxau') }}                # [linux]
    - {{ cdt('libxau-devel') }}          # [linux]
    - {{ cdt('libxcb') }}                # [linux]
    #- {{ cdt('libxdamage') }}            # [linux]
    - {{ cdt('libxdamage-devel') }}      # [linux]
    - {{ cdt('libxext') }}               # [linux]
    - {{ cdt('libxfixes') }}             # [linux]
    - {{ cdt('libxt-devel') }}           # [linux]
    - {{ cdt('libxxf86vm') }}            # [linux]
    - {{ cdt('mesa-dri-drivers') }}      # [linux]
    - {{ cdt('mesa-libegl-devel') }}     # [linux]
    # - {{ cdt('mesa-libegl') }}           # [linux]
    - {{ cdt('mesa-libgbm') }}           # [linux]
    # - {{ cdt('mesa-libgl') }}            # [linux]
    - {{ cdt('mesa-libgl-devel') }}      # [linux]
    - {{ cdt('libglvnd-glx') }}          # [linux and aarch64]
    # - {{ cdt('libglvnd') }}              # [linux and aarch64]
    # - {{ cdt('libglvnd-egl') }}          # [linux and aarch64]
    - {{ cdt('libglvnd-opengl') }}       # [linux and aarch64]
    - {{ cdt('libglvnd-devel') }}        # [linux and aarch64]
    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
  host:
    - python
    # VTK Third Party dependencies
    - zlib {{ zlib }}
    - freetype 2.12
    # # for libEGL.so.1 on linux:
    # - freeglut 3.4.0  # [linux]
    - hdf5 {{ hdf5 }}
    - libxml2 {{ libxml2 }}
    - libpng {{ libpng }}
    - jpeg {{ jpeg }}
    - libtiff {{ libtiff }}
    - jsoncpp 1.9.4
    - expat {{ expat }}
    # Limit TBB version. The oneAPI (2021.*) release removed the `tbb_stddef.h`
    # header, which causes configure-time errors. The 2020 release is probably
    # safe to use but generates *tons* of deprecation warnings that (may) hint
    # at subtle breaks.
    # v2022.0.0 breaks things.
    - tbb
    - tbb-devel 2021.8.0
    - libnetcdf {{ libnetcdf }}
    - lz4-c 1.9.4
    - boost-cpp {{ boost_cpp }}
    - tk {{ tk }}  # [not win]
    - ffmpeg 6.1.1
    - utfcpp 3.2.1
    - eigen 3.4.0
    - double-conversion 3.1.5
    - pugixml 1.11.4
    - glad2-cmake 2.0.8
    - glad2
    - libogg 1.3.5
    - libtheora 1
    - nlohmann_json 3.11.2
    - proj {{ proj }}
    - loguru
    - sqlite {{ sqlite }}
    # Until this is solved:
    # https://gitlab.kitware.com/vtk/vtk/-/issues/19561
    # we use the internal one in build-base.sh
    - gl2ps  # [not osx]
    - qt-main =6
    - xz {{ xz }}
    - numpy 2.0  # [py<313]
    - numpy 2.1  # [py>=313]
  run:
    - python
    - {{ pin_compatible('double-conversion') }}
    - glad2
    - loguru
    - nlohmann_json
    # v9.4.1 requires numpy >=1.9 https://gitlab.kitware.com/vtk/vtk/-/blob/v9.4.1/CMake/setup.py.in#L69
    - numpy
    - utfcpp
    # Extra dependencies for Web modules:
    # - aiohttp
    # - wslink


  run_constrained:
    # Paraview bundles its own VTK that has conflicting Python vtkmodules
    - paraview ==9999999999

test:
  imports:
    - vtk
    - vtk.vtkChartsCore
    - vtk.vtkCommonCore
    - vtk.vtkFiltersCore
    - vtk.vtkFiltersGeneric
    - vtk.vtkGeovisCore
    - vtk.vtkFiltersHybrid
    - vtk.vtkIOCore
    - vtk.vtkImagingCore
    - vtk.vtkInfovisCore
    - vtk.vtkRenderingCore
    - vtk.vtkViewsCore
    - vtk.vtkRenderingVolume
    - vtk.vtkInteractionWidgets
    - vtk.vtkWebGLExporter
    - vtk.tk.vtkTkRenderWidget  # [not win]
    - vtkmodules
    - vtkmodules.vtkChartsCore
    - vtkmodules.vtkCommonCore
    - vtkmodules.vtkFiltersCore
    - vtkmodules.vtkFiltersGeneric
    - vtkmodules.vtkGeovisCore
    - vtkmodules.vtkFiltersHybrid
    - vtkmodules.vtkIOCore
    - vtkmodules.vtkImagingCore
    - vtkmodules.vtkInfovisCore
    - vtkmodules.vtkRenderingCore
    - vtkmodules.vtkViewsCore
    # An error on linux-aarch64:
    # ImportError: libEGL.so.1: cannot open shared object file: No such file or directory
    - vtkmodules.vtkRenderingQt  # [not linux and aarch64]
    - vtkmodules.vtkRenderingVolume
    - vtkmodules.vtkInteractionWidgets
    - vtkmodules.vtkWebCore
    - vtkmodules.web
    - vtkmodules.web.utils
  files:
    - test_vtk.py
  requires:
    - pip
    - setuptools
  commands:
    - pip check
    - test $(pip list | grep vtk | tr -s " " | grep $PKG_VERSION | wc -l) -eq 1  # [unix]
    - pip list | findstr "vtk"  # [win]
    # Ideally here we would do:
    # {% for vtk_lib in ["vtkGUISupportQt", "vtkRenderingQt"] %}
    # ...
    # {% endfor %}
    # But it breaks the linter :( so we do it manually
    - test -f $PREFIX/lib/libvtkGUISupportQt-{{ minor_version }}${SHLIB_EXT}  # [not win]
    - if not exist %PREFIX%\\Library\\lib\\vtkGUISupportQt-{{ minor_version }}.lib exit 1  # [win]
    - if not exist %PREFIX%\\Library\\bin\\vtkGUISupportQt-{{ minor_version }}.dll exit 1  # [win]
    - test -f $PREFIX/lib/libvtkRenderingQt-{{ minor_version }}${SHLIB_EXT}  # [not win]
    - if not exist %PREFIX%\\Library\\lib\\vtkRenderingQt-{{ minor_version }}.lib exit 1  # [win]
    - if not exist %PREFIX%\\Library\\bin\\vtkRenderingQt-{{ minor_version }}.dll exit 1  # [win]
    - python test_vtk.py

about:
  home: https://vtk.org/
  license: BSD-3-Clause
  license_family: BSD
  license_file:
    - Copyright.txt
    - vendored-fast_float-license.txt  # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/fast_float/vtkfast_float/LICENSE-MIT
    - vendored-libharu-license.txt     # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/libharu/vtklibharu/LICENSE
    - vendored-pegtl-license.txt       # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/pegtl/vtkpegtl/LICENSE
    - vendored-exprtk-license.txt      # https://github.com/conda-forge/exprtk-feedstock/blob/main/license.txt
    - vendored-fmt-license.txt         # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/fmt/vtkfmt/LICENSE.rst
    - vendored-cgns-license.txt        # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/cgns/vtkcgns/license.txt
    - vendored-ioss-license.txt        # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/ioss/vtkioss/COPYRIGHT
    - vendored-token-license.txt       # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/token/vtktoken/license.md
    - vendored-verdict-license.txt     # https://gitlab.kitware.com/vtk/vtk/-/blob/master/ThirdParty/verdict/vtkverdict/LICENSE
  summary: >
    VTK is an open-source software system designed for 3D computer graphics, image processing, 
    and visualization. It provides libraries and tools for developing scientific and 
    engineering applications that require 3D visualization.
  description: |
    VTK, or Visualization Toolkit, is an open-source software system designed for 3D computer graphics, 
    image processing, and visualization. It provides a wide range of libraries and tools that are useful 
    for developing scientific and engineering applications that require 3D visualization, such as medical 
    imaging, computational fluid dynamics, and data visualization. The package supports a wide range of 
    visualization algorithms and techniques, including volume rendering, isosurface extraction, contouring, 
    and glyphs. VTK is implemented in C++ with Python bindings, and includes pre-built classes and functions 
    for manipulating and visualizing data. The package has been used in various applications, including 
    medical imaging, computational fluid dynamics, molecular modeling, and geospatial data visualization.
  dev_url: https://gitlab.kitware.com/vtk/vtk
  doc_url: https://vtk.org/documentation/

extra:
  recipe-maintainers:
    - Korijn
    - ivoflipse
    - Maxyme
    - ccordoba12
    - grlee77
    - msarahan
    - patricksnape
    - dfroger
    - tadeu
    - marcelotrevisani
